name: Infrastructure

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - .editorconfig
      - .gitignore
      - .gitattributes
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

env:
  TEMPLATE_PATH: infrastructure/main.bicep
  PARAMETERS_PATH: infrastructure/main.development.bicepparam

jobs:
  validate:
    name: Validate IaC
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Bicep Lint
        uses: Azure/cli@v2
        with:
          inlineScript: |
            az bicep build --file ${{ env.TEMPLATE_PATH }}

      - name: Bicep Validate
        uses: Azure/cli@v2
        with:
          inlineScript: |
            az deployment group validate \
              --name validate-${{ github.run_id }} \
              --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
              --template-file ${{ env.TEMPLATE_PATH }} \
              --parameters ${{ env.PARAMETERS_PATH }}

  deploy-dry-run:
    name: Deploy Infrastructure (Dry Run)
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Infrastructure (Dry Run)
        uses: Azure/cli@v2
        with:
          inlineScript: |
            az deployment group what-if \
              --name whatif-${{ github.run_id }} \
              --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
              --template-file ${{ env.TEMPLATE_PATH }} \
              --parameters ${{ env.PARAMETERS_PATH }} > whatif

      - name: Stringify whatif output
        id: whatif-stringify
        run: |
          WHATIF=$(cat whatif)
          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Whatif Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "$WHATIF" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      - name: Publish to Task Summary
        env:
          SUMMARY: ${{ steps.whatif-stringify.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

      - name: Publish to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          SUMMARY: ${{ steps.whatif-stringify.summary }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN}}
          script: |
            const body = `${process.env.SUMMARY}`;
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
            })

  deploy:
    name: Deploy Infrastructure
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: deploy-dry-run
    environment: Development
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Infrastructure
        uses: Azure/cli@v2
        with:
          inlineScript: |
            az deployment group create \
              --name deploy-${{ github.run_id }} \
              --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
              --template-file ${{ env.TEMPLATE_PATH }} \
              --parameters ${{ env.PARAMETERS_PATH }}

